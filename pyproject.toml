[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools",
    "setuptools-scm",
]

[project]
authors = [
    {email = "d.stansby@ucl.ac.uk", name = "David Stansby"},
]
classifiers = [
    "Operating System :: POSIX",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Typing :: Typed",
]
dependencies = [
]
description = "Code to register regions of interest with full organ datasets."
dynamic = [
    "version",
]
keywords = [
]
name = "hipct-reg"
readme = "README.md"
requires-python = ">=3.11"
license.file = "LICENSE.md"
urls.homepage = "https://github.com/HiPCTProject/hipct-reg"


[project.optional-dependencies]
test = [
    "pytest",
    "pytest-cov",
]
dev = [
    "hipct-reg[test]",
    "build",
    "mypy",
    "pre-commit",
    "ruff",
    "tox>=4",
    "twine",
]

[tool.coverage]
report = {skip_covered = true, sort = "cover"}
run = {branch = true, parallel = true, source = [
    "hipct-reg",
]}
paths.source = [
    "src",
    ".tox*/*/lib/python*/site-packages",
]

[tool.mypy]
explicit_package_bases = true

[tool.pytest.ini_options]
addopts = """
    --color=yes
    --import-mode=importlib
    --verbose
"""
testpaths = [
    "tests",
]

[tool.ruff]
fix = true
force-exclude = true
ignore = [
    "E501" # Line length
]
per-file-ignores = {"tests*" = [
    "INP001",
    "S101",
]}
select = [
    "F",
    "E",
    "W",
    "I",
]
target-version = "py311"
isort.known-first-party = [
    "hipct_reg",
]
mccabe.max-complexity = 18
pep8-naming.classmethod-decorators = [
    "classmethod",
]

[tool.setuptools_scm]
local_scheme = "no-local-version"
write_to = "src/hipct_reg/_version.py"

[tool.tomlsort]
all = true
spaces_indent_inline_array = 4
trailing_comma_inline_array = true
overrides."project.classifiers".inline_arrays = false
overrides."tool.coverage.paths.source".inline_arrays = false

[tool.tox]
legacy_tox_ini = """
    [gh-actions]
    python =
        3.11: py311

    [testenv]
    commands =
        pytest --cov --cov-report=xml
    extras = test

    [tox]
    env_list =
        py311
"""
